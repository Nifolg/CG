
//ФРАГМЕНТНЫЙ ШЕЙДЕР

#version 330 core
//in vec3 ourColor;
in vec2 TexCoord;

out vec4 color;

//sampler2D - тип данных для текстурных объектов(also there 1D and 3D types)
uniform sampler2D ourTexture1;
uniform sampler2D ourTexture2;
void main()
{
    //color = texture(ourTexture, TexCoord)  * vec4(ourColor, 1.0f);
    //texture - встроенная в GLSL функция, которая в качестве первого аргумента принимает текстурный sampler, а в качестве второго аргумента текстурные координаты. Функция texture затем сэмплирует значение цвета, используя текстурные параметры, которые мы задали ранее
    
    //Результатом работы этого фрагментного шейдера будет (фильтрованный) цвет текстуры на (интерполированноый) текстурной координате.
    
    color = mix(texture(ourTexture1, TexCoord), texture(ourTexture2, TexCoord), 0.7);
    //Финальный результат — это комбинация двух текстур. В GLSL встроена функция mix которая принимает два значения на вход и интерполирует их на основе третьего значения. Если третье значение 0.0 то эта функция вернет первый аргумент, если 1.0 то второй. Значение в 0.2 вернет 80% первого входного цвета и 20% второго входного цвета.
}
